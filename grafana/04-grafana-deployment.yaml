apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: grafana
  labels:
    app.kubernetes.io/component: grafana
    app.kubernetes.io/part-of: monitoring-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-hostpath
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
  labels: &Labels
    app: grafana
    #app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: grafana
    app.kubernetes.io/part-of: monitoring-system
    k8s-app: grafana
spec:
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      securityContext:
        #fsGroup: 472
        fsGroup: 1001002
        supplementalGroups:
        - 0    
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: grafana-http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1            
        resources:
          requests:
            cpu: 250m
            memory: 750Mi
        volumeMounts:
        - name: config
          mountPath: "/etc/grafana/"
        - name: access-control
          mountPath: "/etc/grafana/provisioning/access-control/"
        - name: datasources
          mountPath: "/etc/grafana/provisioning/datasources/"
        - name: dashboardproviders
          mountPath: "/etc/grafana/provisioning/dashboards/"
        - name: notifiers
          mountPath: "/etc/grafana/provisioning/notifiers/"
        - name: plugins
          mountPath: "/etc/grafana/provisioning/plugins/"
        - name: dashboards
          mountPath: "/var/lib/grafana/dashboards"
        - name: data
          mountPath: "/var/lib/grafana"
      volumes:
      - name: config
        configMap:
          name: grafana-config
      - name: access-control
        configMap:
          name: grafana-provisioning-acl
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboardproviders
        configMap:
          name: grafana-dashboardproviders
      - name: dashboards
        configMap:
          name: grafana-dashboards
      - name: notifiers
        configMap:
          name: grafana-provisioning-notifiers
      - name: plugins
        configMap:
          name: grafana-provisioning-plugins
      - name: data
        persistentVolumeClaim:
          claimName: grafana-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
  labels:
    #app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: grafana
    app.kubernetes.io/part-of: monitoring-system
    k8s-app: grafana
spec:
  selector:
    k8s-app: grafana
  ports:
  - port: 3000
    protocol: TCP
    targetPort: grafana-http
  #externalTrafficPolicy: Local
  sessionAffinity: ClientIP
  #type: LoadBalancer
---