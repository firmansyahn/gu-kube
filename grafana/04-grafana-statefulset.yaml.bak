apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: grafana
  labels: &Labels
    k8s-app: grafana
    app.kubernetes.io/component: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      securityContext:
        #fsGroup: 472
        fsGroup: 2002
        supplementalGroups:
        - 0 
      serviceAccountName: grafana
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
          - name: http-grafana
            containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 700Mi
          volumeMounts:
          - name: config
            mountPath: "/etc/grafana/"
          - name: datasources
            mountPath: "/etc/grafana/provisioning/datasources/"
          - name: dashboardproviders
            mountPath: "/etc/grafana/provisioning/dashboards/"
          - name: dashboards
            mountPath: "/var/lib/grafana/dashboards"
          - name: grafana-data
            mountPath: "/var/lib/grafana"
      volumes:
      - name: config
        configMap:
          name: grafana-config
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboardproviders
        configMap:
          name: grafana-dashboardproviders
      - name: dashboards
        configMap:
          name: grafana-dashboards
  volumeClaimTemplates:
  - metadata:
      name: grafana-data
      namespace: grafana
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "5Gi"
      storageClassName: local-hostpath
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
  labels:
    #app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: grafana
    k8s-app: grafana
spec:
  selector:
    k8s-app: grafana
  ports:
  - port: 3000
    protocol: TCP
    targetPort: http-grafana
  sessionAffinity: ClientIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: grafana
  annotations:
spec:
  ingressClassName: nginx
  rules:
  - host: grafana.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-svc
            port:
              number: 3000
---