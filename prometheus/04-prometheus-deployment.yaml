apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prometheus
  labels: &Labels
    app: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: monitoring
spec:
  replicas: 1
  serviceName: prometheus
  selector:
    matchLabels: *Labels
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/includeInboundPorts: ""   # do not intercept any inbound ports
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""  # do not intercept any outbound traffic
        proxy.istio.io/config: |  # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]' # mount the shared volume at sidecar proxy
      labels: *Labels
    spec:
      securityContext:
        fsGroup: 1001001
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        args:
        - --config.file=/prometheus/config/prometheus.yaml
        - --storage.tsdb.path=/prometheus/data
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        - --web.enable-lifecycle
        ports:
        - containerPort: 9090
          name: http-prometheus
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30 
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config-file
          mountPath: /prometheus/config
        - name: istio-certs
          mountPath: /etc/prom-certs/
        - name: storage-tsdb
          mountPath: /prometheus/data
          subPath: ""
      terminationGracePeriodSeconds: 60
      volumes:
      - name: config-file
        configMap:
          name: prometheus-config
      - name: istio-certs
        emptyDir:
          medium: Memory
      - name: storage-tsdb
        persistentVolumeClaim:
          claimName: data-prometheus
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    app: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: monitoring
spec:
  selector:
    app: prometheus
  ports:
  - name: http-prom
    port: 9090
    protocol: TCP
    targetPort: 9090
  sessionAffinity: ClientIP
---