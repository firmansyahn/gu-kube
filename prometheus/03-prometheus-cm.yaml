apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: monitoring-system
data:
  prometheus.yaml: |
    global:
      scrape_interval: 30s

    scrape_configs:
    #- job_name: 'prometheus'
       #scrape_interval: 5s
       #static_configs:
        #- targets: ['localhost:9090']

    - job_name: apiserver
      kubernetes_sd_configs: 
      - role: endpoints
      relabel_configs: 
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: keep
        regex: default;kubernetes
        source_labels: 
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
      - action: keep
        regex: https
        source_labels: 
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config: 
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      authorization:
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

    - job_name: 'kubernetes-cadvisor'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      metrics_path: /metrics/cadvisor
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      authorization:
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

    - job_name: 'kube-state-metrics'
      kubernetes_sd_configs: 
      - role: service
      relabel_configs: 
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: keep
        regex: prometheus;kube-state-metrics
        source_labels: 
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_label_k8s_app

    - job_name: 'kubelet'
      kubernetes_sd_configs: 
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      authorization:
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs: 
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: replace
        regex: ([^:]+)(?::\\d+)?
        replacement: $1:10255
        source_labels: 
        - __address__
        target_label: __address__

    # Pods auto discovery when Prometheus annotations is "true"
    # The relabeling allows the actual pod scrape endpoint to be configured via the following annotations:
    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the pod's declared ports (default is a port-free target if none are declared).
    # * `prometheus.io/scheme`:
    # References: https://docs.sysdig.com/en/enable-prometheus-native-service-discovery.html
    - job_name: 'kubernetes-pods'
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        regex: (.+)
        target_label: __metrics_path__
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: replace
        regex: (https?)
        target_label: __scheme__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: podname
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service