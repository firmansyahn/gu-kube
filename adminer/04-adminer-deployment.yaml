apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: adminer
  labels: &Labels
    app: adminer
    app.kubernetes.io/component: adminer
    app.kubernetes.io/part-of: database
    version: "v4.8.1"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels: *Labels
    spec:
      securityContext: {}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
      containers:
      - name: adminer
        image: adminer:4.8.1-standalone
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http-adminer
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1            
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: adminer
  labels:
    app: adminer
    app.kubernetes.io/component: adminer
    app.kubernetes.io/part-of: database
spec:
  selector:
    app: adminer
  ports:
  - name: http-adminer
    port: 8080
    protocol: TCP
    targetPort: 8080
  sessionAffinity: ClientIP
---