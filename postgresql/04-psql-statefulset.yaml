apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-data
  namespace: postgresql
  labels:
    app.kubernetes.io/component: postgresql
    app.kubernetes.io/part-of: monitoring-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-hostpath
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: postgresql
  labels: &Labels
    #app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: postgresql
    app.kubernetes.io/part-of: monitoring-system
    k8s-app: postgresql
spec:
  serviceName: postgresql
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      securityContext:
        fsGroup: 1001001
      serviceAccountName: postgresql
      containers:
      - name: postgresql-server
        image: postgres:13
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        resources:
          requests:
            cpu: 200m
            memory: 1000Mi
        volumeMounts:
        - name: config-file
          mountPath: /postgresql/config
        - name: storage-data
          mountPath: /postgresql/data
          subPath: ""
      terminationGracePeriodSeconds: 300
      volumes:
      - name: config-file
        configMap:
          name: postgresql-config
      - name: storage-data
        persistentVolumeClaim:
          claimName: postgresql-data
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - postgresql
            topologyKey: "kubernetes.io/hostname"
---
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  namespace: postgresql
  labels:
    app.kubernetes.io/component: postgresql
    app.kubernetes.io/part-of: monitoring-system
    k8s-app: postgresql
spec:
  clusterIP: None
  selector:
    #Should same with StatefullSet spec.selector
    k8s-app: postgresql
  ports:
  - name: tcp-postgresql
    protocol: TCP
    port: 5432
    targetPort: 5432
  sessionAffinity: ClientIP
---